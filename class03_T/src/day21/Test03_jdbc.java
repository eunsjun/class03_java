package day21;


import java.util.*;
public class Test03_jdbc {
/*
	JDBC
		==> 자바 프로그램을 이용해서 데이터베이스를 컨트롤 할 수 있는
			외부 API 이다.
			
		문제점]
			데이터베이스는 그 데이터베이스가 가진 DBMS에 의해서 성능이 결정된다.
			각 데이터베이스마다 질의 명령을 처리하는 방법(DBMS)이 다르다.
			따라서 데이터베이스마다
			해당 데이터베이스의 DBMS에 따라서 
			프로그램 방식을 다르게 해야 한다 결론에 이른다.
			
		해결 방법]
			자바 안에 DBMS를 만들어 놓았고
			개발자는 자바의 DBMS 에게만 명령을 내리도록 해 놓았다.
			(개발자는 한가지 방식으로만 처리하도록 해놓았다.)
			
			자바 내에 있는 DBMS가 실제 데이터베이스와 연결해서 처리하도록 해 놓았다.
			
			==>
			이 문제를 해결하기 위한 자바의 DBMS가 바로 JDBC 이다.
			우리가 JDBC를 배운다는 개념은
			결국
			우리가 JDBC에게만 명령을 내리면
			JDBC가 알아서 필요한 데이터베이스의 DBMS에게 명령을 전달하게 된다.
			개발자의 수고가 덜 것이다.
			
		참고]
			JDBC와 실제 DBMS를 연결하는 프로그램은 
			해당 데이터베이스를 만드는 회사에서 제공하고 있다.
			
			우리의 경우 
				ojdbc6.jar
			파일 이다. 
			
	★★★
	데이터베이스 연결을 위해서 먼저 해야할 일(자바개발자가...)
		1. 	사용하려는 데이터베이스와 JDBC를 연결하는 프로그램을 찾는다.
			이 프로그램을 "JDBC Driver" 라고 부른다.
			
		2. 	찾아낸 외부 API를 이클립스에 등록해서
			이클립스에서 이 외부 API를 사용 할 수 있도록 조치를 해야 한다.
			
			(외부 API 등록하는 방법)
				
				1). 프로젝트에서 Properties 메뉴를 선택한다.
				2). 왼쪽 창에서 Java Build Path를 선택
				3). 가운데 창에서 3번째 탭인 Libraries를 선택
				4). Add External JARs 버튼을 선택해서 다운받은 드라이버를 선택한다.
				
		
	참고]
		인터페이스로 만들어 놓은 이유
			==> 세션을 관리하는 방법이 각가의 DBMS 마다 다르므로
				접속하는 순간 함수의 기능을 거기에 맞도록 조절하기 위해서...
		
 */
	public Test03_jdbc() {
	}

	public static void main(String[] args) {
		new Test03_jdbc();
	}

}
