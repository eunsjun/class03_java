package day08;

public class Test03 {
/*
		*** 함수 ***
			: Function, Method
				
			한가지 작업을 실행하게 위해 만들어진 가장 작은 단위의 프로그램...
			==> 다른곳에서 호출할 수 있다는 이야기고
				다시 반복해서 사용할 수 있다는 이야기...
				
			프로그램이란?
				기능을 가진 함수들이 모여서 특정 목적을 위해 구성된 것...
				
				==> class
				
			예]
				charAt() 	: 문자열에서 해당인덱스에 위치한 문자를 추출해주는 함수...
				random()	: 0 ~ 1 사이의 숫자를 랜덤하게 발생시켜주는 함수...
				
				
		참고]
			1. 함수는 다른곳에서 호출해야만 실행이 된다.
			   스스로 실행되어지지는 않는다.
			   
			2. 함수는 실행이 완료되면 자신을 호출한 곳으로 실행 순서를 넘긴다.
				
				예]
					class Test {
						
						void abc(){
							(1)
						}
						
						void main(){
							(2)
							xyz();
							(3)
						}
						
						void xyz(){
								(4)
							abc(); // 함수호출
								(5)
						}
					}
				실행순서	: (2) -> (4) -> (1) -> (5) -> (3)

 */

/*

		함수 만드는 방법]
			
			[접근지정자] [속성] 반환값타입/유형 함수이름(매개변수리스트..){
				실행될 내용....
			}
			
			
				참고]
					매개변수리스트	: 함수를 실행할때 데이터를 입력해줘야 실행되는 것들이 있다.
									  이때 입력해줘야할 데이터의 타입과 갯수를 지정해 놓은 것이
									  매개변수 리스트이다.
									  데이터타입 변수이름, 데이터타입 변수이름,....
									  
					예를 들자면 
						substring() 함수는 매개변수로 int 타입의 매개변수를 한개 또는 두개를 입력해야만
						실행이 된다.
		
				  
		반환값 타입/유형
			==> 함수는 실행이 되면 실행된 결과를 반환해주는 함수가 있다.
				이때 반환해주는 데이터의 타입을 정해줘야 하는데 그것을 함수이름앞에 기술하면 된다.
				만약 반환해주는 데이터가 없다면 
				다시말해서 결과가 반환되지 않아도 된다면
				그때는 void 라고 적어준다.
				
				반환값 타입은 기본데이터타입과 클래스이름 모두 사용할 수 있다.
				
		*****
		반환값은 한개이거나 없어야 한다.
		
		결론]
			함수의 형식은 4가지 경우에서 벗어나지 않는다.
			
				1. void abc(){}			- 매개변수가 없고 반환값도 없는 경우
				2. int abc(){}			- 매개변수가 없지만 반환값은 있는 경우
				3. void abc(int no){} 	- 매개변수는 있지만 반환값은 없는 경우
				4. int abc(int no){}	- 매개변수도 있고 반환값도 있는 경우
		
		
		*****
		return 의 의미
			==> 함수 안에서 사용할 수 있는 명령
			
			의미]
				1. 함수의 실행을 종료하세요. 함수내의 return 명령이후는 실행을 안한다는 의미...
					형식]
						return;	==> 반환값유형이 void 인 경우
				2. 함수의 실행의 결과는 뭔가요??? 있으면 보냅시다. 
				   반환값이 생기면 반환해주자
				   형식]
				   		return 	데이터;
				   		==> 데이터는 반환값타입 의 데이터를 의미...
 */
	
/*
		함수 사용방법
			==> 함수는 작성하는 순간 실행되는 것은 아니고
				반드시 다른곳에서 호출을 해야 실행이 된다.
				
				호출 형식]
					함수이름(데이터, 데이터,...);
					
				데이터란???
					함수는 그 함수가 가지고 있는 기능을 수행하기 위해서 필요한 데이터가 있을 것이다.
					이때 데이터를 입력 받아야만 기능이 수행되어지는 경우가 있다.
					이때 입력받아야될 데이터의 타입과 수를 매개변수에서 정의를 해놓았고
					그 정의된 타입과 순서, 갯수만큼 반드시 입력해줘야 함수가 실행이 된다.
					
					
			예]
				- 정의 -
				void abc(int a){}
				
				- 호출 - 
				abc();		==> x
				abc('a'); 	==> o
				abc("a"); 	==> x
				abc(10); 	==> o
				abc(2, 3);	==> x
				abc(3.14);	==> x
				
		
		***
		매개변수는 함수 정의시 지역변수로 작용한다.
		함수 내에서만 사용할 수 있는 지역변수 이다.
		
		
 */
	
	public static void main(String[] args) {
		/*
		 * String str = "abcd".substring(1);
		 * 
		 * // 삼항연산자 // String msg = ((beginIndex == 0) && (endIndex == value.length)) ?
		 * this : new String(value, beginIndex, subLen);
		 * 
		 * System.out.println(str);
		 */
		
		// abc(); // 에러
		abc('a');	// 자동 형변환
		abc(10);	// 자동 형변환
		abc(3.14f);	// 입력된데이터크기가 더 크다.
		// abc("a");	// error
		// abc(2, 5);	// error
		
		
	}
	
	public static void abc(float a) {
		System.out.println(a);
	}
	
	
}
