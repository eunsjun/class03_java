package day13;

import java.util.*;
public class Test03 {
/*
	추상클래스
		==> 추상함수를 0개 이상 가지고있는 클래스
			추상함수가 없어도 강제로 추상 클래스로 만들 수 있고
			추상 함수가 한개라도 있으면 반드시 추상 클래스로 만들어야 한다.
			
			
		추상함수란???(Abstract Function)
			참고]
				함수의 형식]
					[접근지정자] [속성]  반화값타입/유형  함수이름(매개변수리스트){
						함수실행내용...(함수의 몸체)
					}
			
			==> 함수의 몸체({}, 블럭)을 가지고 있지 않은 함수를 추상함수라 한다.
				즉, 기능이 없는 함수를 말한다.
				==> C 언어에서는 가상함수에 해당하는 것...
				
				형식]
					[접근지정자]  abstract 반환값  함수이름(매개변수리스트);
					
					예] 
						public abstract void abc(int a);
						
						
		추상 클래스 만드는 방법
			형식]
				[접근지정자] abstract class 클래스이름 {
					변수
					일반함수
					추상함수
				}
		
		
		왜???
			다형성 구현을 하기 위해서....
			
			
		추상클래스를 사용하는 방법
			==>
				추상클래스는 스스로 new 시킬 수 없다.
				왜냐하면 그 안에는 기능이 없는 함수가 존재할 수 있기 때문에...
				
				***
				1. 	다른클래스에 상속을 한 후 
					추상함수의 기능을 만들어주고(오버라이드해서)
					하위클래스를 new 시켜서 사용한다.
					
					==> 실무에서 사용하는 경우는 10% 미만...
					
				2. 	추상클래스 내부에
						***
						static 속성을 가지고 
						반환값이 자기자신인 함수를 
					사용해서 인스턴스를 만들어 사용한다.
					
	참고]
		추상클래스가 아님에도
		생성자 함수가 존재하지 않는 클래스가 있다.
		이 클래스는 생성자 함수의 접근지정자가 private 로 해놓아서
		다른곳에서 사용할 수 없도록 감춰놓은 경우이다.
		역시 new 시킬수 없고
		이런 클래스 역시
			static 속성이면서
			반환값이 자기자신인 함수를
		사용해서 인스턴스를 만들어 주면 된다.
		
 */
	public Test03() {
		Calendar cal;
//		cal = new Calendar();	
		//==> 추상클래스는 new 명령으로 인스턴스를 만들수 없다.
		
		// 1.번 방법
		cal = new Test03_01();
		
		// 2. 번 방법
		cal = Calendar.getInstance();
	}

}
