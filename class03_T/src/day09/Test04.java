package day09;

public class Test04 {
/*
		함수란	: 
					기능을 가진 가장 작은 프로그램 단위...
					위치는 클래스 블럭 내에 만들어진다.
					클래스 블럭내에 만들수 있는 갯수는 정해져있지 않다.
					***
					함수내에서 함수를 만드는 경우는 없다.
					반드시 함수 블럭({}) 밖에서 만들어야 한다.
					
		형식 1]
				가.
					클래스 생성자 함수 :
						[public] 클래스이름(){} ==> 기본생성자함수
						[접근지정자] 클래스이름(매개변수리스트){}	==> 
						
				나.
					일반함수
						
						[접근지정자] 	[속성]		반환값타입|유형		함수이름(매개변수리스트){
							실행내용....
						}
						매개변수란...
							함수를 실행할 때 반드시 필요한 데이터를 입력할때
							입력한 데이터의 타입과 갯수를 정의하는 작업...
							
							
		함수는 작성했다고 해서 자동 실행되는 것은 아니다.
		어딘가에서 호출을 해줘야 실행이 된다.
		
		호출 형식]
			함수이름(매개변수데이터);
			
		함수의 반환값]
			만약 함수 실행후 반환되어야할 값이 있다면
			그 데이터의 타입(또는 유형)을 함수 이름전에 기술해야한다.
			만약 반환값이 없다면 void 라고 쓰고
			함수의 맨 아랫줄에 return; 명령을 내려준다.
			이때 리턴명령은 생략가능하다.
			
		return 명령의 의미]
			1. 함수 실행을 종료하세요.
			2. 넘겨줘야할 값이 있다면 데이터를 넘겨주고 함수를 종료하세요.
					return 		데이터;
		
 */
	int num = 0;
	public Test04() {
//		abc();
		abc(10, 20);
		abc("abc", 'a');
		// abc('a', "abc"); // 순서가 달라서....
		// abc("ac");	// 입력값이 이런 타입은 없다.
	}
	public static void main(String[] args) {
		new Test04();
	}
	
	public void abc() {
	}
	
	public void abc(int a, int b) {
	}
	
	public void abc(String s, char c) {
		// 이 함수는 기능을 수행하는데 
		// 반드시 문자열과 문자를 입력 받아야 수행될 수 있다.
	}
	
	public int xyz(String msg) {
		
		return 1;
	}

}
